[tool.poetry]
name = "pyNameEntityNormalization"
version = "0.1.0"
description = "A production-ready Python package for Named Entity Normalization (NEN) using a hybrid generate-and-rank approach with pgvector and sentence-transformers."
authors = ["Jules <agent@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "pyNameEntityNormalization", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
# Core
sqlalchemy = "^2.0.23"
pydantic = "^2.5.2"
pydantic-settings = "^2.1.0"
# Database
psycopg = {extras = ["binary", "pool"], version = "^3.1.18"}
pgvector = "^0.2.0"
# NLP/ML
torch = "^2.1.1"
sentence-transformers = "^2.2.2"
transformers = "^4.35.2"
# Data Handling
pandas = "^2.1.3"
numpy = "^1.26.2"
# CLI
typer = {extras = ["rich"], version = "^0.9.0"}
rich = "^13.7.0"
tqdm = "^4.66.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
types-tqdm = "^4.66.0.3"
pre-commit = "^3.5.0"

[tool.poetry.scripts]
nen-indexer = "pyNameEntityNormalization.cli:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.main.api"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
line-length = 88
select = ["E", "W", "F", "I", "C", "B"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
strict = true
# SQLAlchemy 2.0 requires this plugin for mypy
plugins = "sqlalchemy.ext.mypy.plugin"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src/pyNameEntityNormalization --cov-report=term-missing"
testpaths = [
    "tests",
]
filterwarnings = [
    # Muted because of extensive use of pydantic -> "fields may not be defined", "definiton of..."
    "ignore::DeprecationWarning",
]
